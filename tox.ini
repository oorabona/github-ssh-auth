[tox]
requires =
    tox>=4.2
env_list =
    fix_lint
    py311
    py310
    py39
    coverage
    readme
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {basepython}
deps =
    pytest
    pytest-cov
extras =
    testing
pass_env =
    ACCESS_TOKEN
    CURL_CA_BUNDLE
    GITHUB_ORG
    PIP_CACHE_DIR
    PYTEST_*
    REQUESTS_CA_BUNDLE
    SSL_CERT_FILE
set_env =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    PIP_DISABLE_PIP_VERSION_CHECK = 1
    {pypy}: PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
commands =
    pytest \
      --cov "{envsitepackagesdir}/github_ssh_auth" \
      --cov-config "{toxinidir}/tox.ini" \
      --cov-report=term-missing:skip-covered \
      --cov-report annotate \
      {posargs:.}

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
skip_install = true
deps =
    isort>=5.12
    pre-commit>=2.16
extras =
    lint
pass_env =
    {[testenv]passenv}
    PRE_COMMIT_HOME
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
    generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
skip_install = true
deps =
    coverage>=6.2
    diff-cover>=6.4
parallel_show_output = true
pass_env =
    {[testenv]passenv}
    DIFF_AGAINST
set_env =
    COVERAGE_FILE = {toxworkdir}/.coverage
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py311
    py310
    py39

[testenv:readme]
description = check that the long description is valid
skip_install = true
deps =
    twine>=4
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:exit_code]
description = commands with several exit codes
skip_install = true
commands =
    python3.9 -c "import sys; sys.exit(139)"

[testenv:X]
description = print the positional arguments passed in with echo
commands =
    echo {posargs}

[testenv:release]
description = do a release based of value of GITHUB_REF_NAME env var
deps =
    gitpython>=3.1.24
    packaging>=21.3
    towncrier>=21.3
pass_env =
    *
commands =
    python {toxinidir}/release.py

[testenv:dev]
description = dev environment with all deps at {envdir}
package = editable
deps =
    {[testenv:release]deps}
extras =
    docs
    testing
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503, C901, E402, B011

[pep8]
max-line-length = 120

[coverage:run]
branch = true
parallel = true

[coverage:report]
skip_covered = True
show_missing = True
exclude_lines =
    \#\s*pragma: no cover
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    ^if __name__ == ['"]__main__['"]:$

[coverage:paths]
source = src/github_ssh_auth
    */.tox/*/lib/python*/site-packages/github_ssh_auth
    */.tox/pypy*/site-packages/github_ssh_auth
    */.tox\*\Lib\site-packages\github_ssh_auth
    */src/github_ssh_auth
    *\src\github_ssh_auth

[pytest]
addopts = -ra --showlocals
testpaths = tests
xfail_strict = True
markers =
    git
    network

[isort]
profile = black
line_length = 120
known_first_party = tox,tests
